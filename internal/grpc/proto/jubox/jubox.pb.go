// Copyright 2021 Jubox gRPC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: jubox.proto

package jubox

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SystemEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNo uint32       `protobuf:"varint,1,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no,omitempty"`
	Timestamp     string       `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceId      string       `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	EventDetail   *EventDetail `protobuf:"bytes,4,opt,name=event_detail,json=eventDetail,proto3" json:"event_detail,omitempty"`
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{0}
}

func (x *SystemEvent) GetTransactionNo() uint32 {
	if x != nil {
		return x.TransactionNo
	}
	return 0
}

func (x *SystemEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SystemEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SystemEvent) GetEventDetail() *EventDetail {
	if x != nil {
		return x.EventDetail
	}
	return nil
}

type EventDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventDetail) Reset() {
	*x = EventDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDetail) ProtoMessage() {}

func (x *EventDetail) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDetail.ProtoReflect.Descriptor instead.
func (*EventDetail) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{1}
}

func (x *EventDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventDetail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNo uint32       `protobuf:"varint,1,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no,omitempty"`
	DeviceId      string       `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp     string       `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EventDetail   *EventDetail `protobuf:"bytes,4,opt,name=event_detail,json=eventDetail,proto3" json:"event_detail,omitempty"`
}

func (x *BedEvent) Reset() {
	*x = BedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BedEvent) ProtoMessage() {}

func (x *BedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BedEvent.ProtoReflect.Descriptor instead.
func (*BedEvent) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{2}
}

func (x *BedEvent) GetTransactionNo() uint32 {
	if x != nil {
		return x.TransactionNo
	}
	return 0
}

func (x *BedEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *BedEvent) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *BedEvent) GetEventDetail() *EventDetail {
	if x != nil {
		return x.EventDetail
	}
	return nil
}

type BedReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNo   uint32           `protobuf:"varint,1,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no,omitempty"`
	DeviceId        string           `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp       string           `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BedReportDetail *BedReportDetail `protobuf:"bytes,4,opt,name=bed_report_detail,json=bedReportDetail,proto3" json:"bed_report_detail,omitempty"`
}

func (x *BedReport) Reset() {
	*x = BedReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BedReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BedReport) ProtoMessage() {}

func (x *BedReport) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BedReport.ProtoReflect.Descriptor instead.
func (*BedReport) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{3}
}

func (x *BedReport) GetTransactionNo() uint32 {
	if x != nil {
		return x.TransactionNo
	}
	return 0
}

func (x *BedReport) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *BedReport) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *BedReport) GetBedReportDetail() *BedReportDetail {
	if x != nil {
		return x.BedReportDetail
	}
	return nil
}

type BedReportDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SleepStartTime     string  `protobuf:"bytes,1,opt,name=sleep_start_time,json=sleepStartTime,proto3" json:"sleep_start_time,omitempty"`             // 2020-07-20T03:01:40.000Z,
	SleepEndTime       string  `protobuf:"bytes,2,opt,name=sleep_end_time,json=sleepEndTime,proto3" json:"sleep_end_time,omitempty"`                   // 2020-07-20T04:03:16.000Z,
	SleepLatency       uint32  `protobuf:"varint,3,opt,name=sleep_latency,json=sleepLatency,proto3" json:"sleep_latency,omitempty"`                    // 1965 (sec)
	SleepEffectiveness float32 `protobuf:"fixed32,4,opt,name=sleep_effectiveness,json=sleepEffectiveness,proto3" json:"sleep_effectiveness,omitempty"` // 54.167
	TurnOverCnt        uint32  `protobuf:"varint,5,opt,name=turn_over_cnt,json=turnOverCnt,proto3" json:"turn_over_cnt,omitempty"`                     // 5
	NotInBedCnt        uint32  `protobuf:"varint,6,opt,name=not_in_bed_cnt,json=notInBedCnt,proto3" json:"not_in_bed_cnt,omitempty"`                   // 0
	NotInBedTime       uint32  `protobuf:"varint,7,opt,name=not_in_bed_time,json=notInBedTime,proto3" json:"not_in_bed_time,omitempty"`                // 1234
}

func (x *BedReportDetail) Reset() {
	*x = BedReportDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BedReportDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BedReportDetail) ProtoMessage() {}

func (x *BedReportDetail) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BedReportDetail.ProtoReflect.Descriptor instead.
func (*BedReportDetail) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{4}
}

func (x *BedReportDetail) GetSleepStartTime() string {
	if x != nil {
		return x.SleepStartTime
	}
	return ""
}

func (x *BedReportDetail) GetSleepEndTime() string {
	if x != nil {
		return x.SleepEndTime
	}
	return ""
}

func (x *BedReportDetail) GetSleepLatency() uint32 {
	if x != nil {
		return x.SleepLatency
	}
	return 0
}

func (x *BedReportDetail) GetSleepEffectiveness() float32 {
	if x != nil {
		return x.SleepEffectiveness
	}
	return 0
}

func (x *BedReportDetail) GetTurnOverCnt() uint32 {
	if x != nil {
		return x.TurnOverCnt
	}
	return 0
}

func (x *BedReportDetail) GetNotInBedCnt() uint32 {
	if x != nil {
		return x.NotInBedCnt
	}
	return 0
}

func (x *BedReportDetail) GetNotInBedTime() uint32 {
	if x != nil {
		return x.NotInBedTime
	}
	return 0
}

type FallEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNo   uint32           `protobuf:"varint,1,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no,omitempty"`
	DeviceId        string           `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	FallEventDetail *FallEventDetail `protobuf:"bytes,3,opt,name=fall_event_detail,json=fallEventDetail,proto3" json:"fall_event_detail,omitempty"`
}

func (x *FallEvent) Reset() {
	*x = FallEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FallEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FallEvent) ProtoMessage() {}

func (x *FallEvent) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FallEvent.ProtoReflect.Descriptor instead.
func (*FallEvent) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{5}
}

func (x *FallEvent) GetTransactionNo() uint32 {
	if x != nil {
		return x.TransactionNo
	}
	return 0
}

func (x *FallEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *FallEvent) GetFallEventDetail() *FallEventDetail {
	if x != nil {
		return x.FallEventDetail
	}
	return nil
}

type FallEventDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventDetail *EventDetail `protobuf:"bytes,2,opt,name=event_detail,json=eventDetail,proto3" json:"event_detail,omitempty"`
}

func (x *FallEventDetail) Reset() {
	*x = FallEventDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FallEventDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FallEventDetail) ProtoMessage() {}

func (x *FallEventDetail) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FallEventDetail.ProtoReflect.Descriptor instead.
func (*FallEventDetail) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{6}
}

func (x *FallEventDetail) GetEventDetail() *EventDetail {
	if x != nil {
		return x.EventDetail
	}
	return nil
}

type UpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNo uint32 `protobuf:"varint,1,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no,omitempty"`
	RespCode      string `protobuf:"bytes,2,opt,name=resp_code,json=respCode,proto3" json:"resp_code,omitempty"`
	RespMessage   string `protobuf:"bytes,3,opt,name=resp_message,json=respMessage,proto3" json:"resp_message,omitempty"`
}

func (x *UpdateResp) Reset() {
	*x = UpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jubox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResp) ProtoMessage() {}

func (x *UpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_jubox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResp.ProtoReflect.Descriptor instead.
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return file_jubox_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateResp) GetTransactionNo() uint32 {
	if x != nil {
		return x.TransactionNo
	}
	return 0
}

func (x *UpdateResp) GetRespCode() string {
	if x != nil {
		return x.RespCode
	}
	return ""
}

func (x *UpdateResp) GetRespMessage() string {
	if x != nil {
		return x.RespMessage
	}
	return ""
}

var File_jubox_proto protoreflect.FileDescriptor

var file_jubox_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x22,
	0xb1, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x3b, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xae, 0x01, 0x0a, 0x08, 0x42, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x40, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x09, 0x42, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x4d, 0x0a, 0x11, 0x62, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e,
	0x42, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0f, 0x62, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0xa7, 0x02, 0x0a, 0x0f, 0x42, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x6c, 0x65, 0x65, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x65, 0x64, 0x5f, 0x63, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x42, 0x65, 0x64,
	0x43, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x6f,
	0x74, 0x49, 0x6e, 0x42, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x46,
	0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x11,
	0x66, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x66, 0x61, 0x6c, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x53, 0x0a, 0x0f, 0x46,
	0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x40,
	0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x22, 0x73, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc9, 0x02, 0x0a, 0x05, 0x4a, 0x75, 0x62, 0x6f, 0x78, 0x12,
	0x52, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x42, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x42, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a,
	0x75, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x42, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x42, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a,
	0x75, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x46, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a,
	0x75, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x3a, 0x5a, 0x38, 0x6a, 0x75, 0x62, 0x6f, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2f, 0x6a, 0x75, 0x62, 0x6f, 0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x75, 0x62, 0x6f, 0x78, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jubox_proto_rawDescOnce sync.Once
	file_jubox_proto_rawDescData = file_jubox_proto_rawDesc
)

func file_jubox_proto_rawDescGZIP() []byte {
	file_jubox_proto_rawDescOnce.Do(func() {
		file_jubox_proto_rawDescData = protoimpl.X.CompressGZIP(file_jubox_proto_rawDescData)
	})
	return file_jubox_proto_rawDescData
}

var file_jubox_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_jubox_proto_goTypes = []interface{}{
	(*SystemEvent)(nil),     // 0: grpc.proto.jubox.SystemEvent
	(*EventDetail)(nil),     // 1: grpc.proto.jubox.EventDetail
	(*BedEvent)(nil),        // 2: grpc.proto.jubox.BedEvent
	(*BedReport)(nil),       // 3: grpc.proto.jubox.BedReport
	(*BedReportDetail)(nil), // 4: grpc.proto.jubox.BedReportDetail
	(*FallEvent)(nil),       // 5: grpc.proto.jubox.FallEvent
	(*FallEventDetail)(nil), // 6: grpc.proto.jubox.FallEventDetail
	(*UpdateResp)(nil),      // 7: grpc.proto.jubox.UpdateResp
}
var file_jubox_proto_depIdxs = []int32{
	1, // 0: grpc.proto.jubox.SystemEvent.event_detail:type_name -> grpc.proto.jubox.EventDetail
	1, // 1: grpc.proto.jubox.BedEvent.event_detail:type_name -> grpc.proto.jubox.EventDetail
	4, // 2: grpc.proto.jubox.BedReport.bed_report_detail:type_name -> grpc.proto.jubox.BedReportDetail
	6, // 3: grpc.proto.jubox.FallEvent.fall_event_detail:type_name -> grpc.proto.jubox.FallEventDetail
	1, // 4: grpc.proto.jubox.FallEventDetail.event_detail:type_name -> grpc.proto.jubox.EventDetail
	0, // 5: grpc.proto.jubox.Jubox.SystemEventUpdate:input_type -> grpc.proto.jubox.SystemEvent
	2, // 6: grpc.proto.jubox.Jubox.BedEventUpdate:input_type -> grpc.proto.jubox.BedEvent
	3, // 7: grpc.proto.jubox.Jubox.BedReportUpdate:input_type -> grpc.proto.jubox.BedReport
	5, // 8: grpc.proto.jubox.Jubox.FallEventUpdate:input_type -> grpc.proto.jubox.FallEvent
	7, // 9: grpc.proto.jubox.Jubox.SystemEventUpdate:output_type -> grpc.proto.jubox.UpdateResp
	7, // 10: grpc.proto.jubox.Jubox.BedEventUpdate:output_type -> grpc.proto.jubox.UpdateResp
	7, // 11: grpc.proto.jubox.Jubox.BedReportUpdate:output_type -> grpc.proto.jubox.UpdateResp
	7, // 12: grpc.proto.jubox.Jubox.FallEventUpdate:output_type -> grpc.proto.jubox.UpdateResp
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_jubox_proto_init() }
func file_jubox_proto_init() {
	if File_jubox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jubox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BedReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BedReportDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FallEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FallEventDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jubox_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jubox_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jubox_proto_goTypes,
		DependencyIndexes: file_jubox_proto_depIdxs,
		MessageInfos:      file_jubox_proto_msgTypes,
	}.Build()
	File_jubox_proto = out.File
	file_jubox_proto_rawDesc = nil
	file_jubox_proto_goTypes = nil
	file_jubox_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JuboxClient is the client API for Jubox service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JuboxClient interface {
	SystemEventUpdate(ctx context.Context, in *SystemEvent, opts ...grpc.CallOption) (*UpdateResp, error)
	BedEventUpdate(ctx context.Context, in *BedEvent, opts ...grpc.CallOption) (*UpdateResp, error)
	BedReportUpdate(ctx context.Context, in *BedReport, opts ...grpc.CallOption) (*UpdateResp, error)
	FallEventUpdate(ctx context.Context, in *FallEvent, opts ...grpc.CallOption) (*UpdateResp, error)
}

type juboxClient struct {
	cc grpc.ClientConnInterface
}

func NewJuboxClient(cc grpc.ClientConnInterface) JuboxClient {
	return &juboxClient{cc}
}

func (c *juboxClient) SystemEventUpdate(ctx context.Context, in *SystemEvent, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/grpc.proto.jubox.Jubox/SystemEventUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *juboxClient) BedEventUpdate(ctx context.Context, in *BedEvent, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/grpc.proto.jubox.Jubox/BedEventUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *juboxClient) BedReportUpdate(ctx context.Context, in *BedReport, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/grpc.proto.jubox.Jubox/BedReportUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *juboxClient) FallEventUpdate(ctx context.Context, in *FallEvent, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/grpc.proto.jubox.Jubox/FallEventUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JuboxServer is the server API for Jubox service.
type JuboxServer interface {
	SystemEventUpdate(context.Context, *SystemEvent) (*UpdateResp, error)
	BedEventUpdate(context.Context, *BedEvent) (*UpdateResp, error)
	BedReportUpdate(context.Context, *BedReport) (*UpdateResp, error)
	FallEventUpdate(context.Context, *FallEvent) (*UpdateResp, error)
}

// UnimplementedJuboxServer can be embedded to have forward compatible implementations.
type UnimplementedJuboxServer struct {
}

func (*UnimplementedJuboxServer) SystemEventUpdate(context.Context, *SystemEvent) (*UpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemEventUpdate not implemented")
}
func (*UnimplementedJuboxServer) BedEventUpdate(context.Context, *BedEvent) (*UpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BedEventUpdate not implemented")
}
func (*UnimplementedJuboxServer) BedReportUpdate(context.Context, *BedReport) (*UpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BedReportUpdate not implemented")
}
func (*UnimplementedJuboxServer) FallEventUpdate(context.Context, *FallEvent) (*UpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FallEventUpdate not implemented")
}

func RegisterJuboxServer(s *grpc.Server, srv JuboxServer) {
	s.RegisterService(&_Jubox_serviceDesc, srv)
}

func _Jubox_SystemEventUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JuboxServer).SystemEventUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.proto.jubox.Jubox/SystemEventUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JuboxServer).SystemEventUpdate(ctx, req.(*SystemEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jubox_BedEventUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JuboxServer).BedEventUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.proto.jubox.Jubox/BedEventUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JuboxServer).BedEventUpdate(ctx, req.(*BedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jubox_BedReportUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BedReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JuboxServer).BedReportUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.proto.jubox.Jubox/BedReportUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JuboxServer).BedReportUpdate(ctx, req.(*BedReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jubox_FallEventUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FallEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JuboxServer).FallEventUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.proto.jubox.Jubox/FallEventUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JuboxServer).FallEventUpdate(ctx, req.(*FallEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jubox_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.proto.jubox.Jubox",
	HandlerType: (*JuboxServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SystemEventUpdate",
			Handler:    _Jubox_SystemEventUpdate_Handler,
		},
		{
			MethodName: "BedEventUpdate",
			Handler:    _Jubox_BedEventUpdate_Handler,
		},
		{
			MethodName: "BedReportUpdate",
			Handler:    _Jubox_BedReportUpdate_Handler,
		},
		{
			MethodName: "FallEventUpdate",
			Handler:    _Jubox_FallEventUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jubox.proto",
}
